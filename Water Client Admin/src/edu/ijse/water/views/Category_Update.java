/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package edu.ijse.water.views;

import edu.ijse.water.controller.ManageCategoryController;
import edu.ijse.water.dto.CategoryDTO;
import edu.ijse.water.observer.Observer;
import java.awt.Color;
import java.rmi.server.UnicastRemoteObject;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.BorderFactory;
import javax.swing.JOptionPane;
import javax.swing.border.Border;

/**
 *
 * @author SL_WOLF
 */
public class Category_Update extends javax.swing.JPanel implements Observer{

    /**
     * Creates new form Category_Update
     */
    private String reservedCatId = "";
     private boolean update = false;
    Border defaultBorder;
    int valid;
    public Category_Update() {
        initComponents();
        defaultBorder = txtName.getBorder();
        lblUpdate.setVisible(false);
        valid=0;
        try {
            UnicastRemoteObject.exportObject(this, 0);
            ManageCategoryController.getSubject().registerObserver(this);
        } catch (Exception ex) {
            Logger.getLogger(Category_Remove.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblCancel = new javax.swing.JLabel();
        lblNew = new javax.swing.JLabel();
        lblUpdate = new javax.swing.JLabel();
        txtCatId = new org.jdesktop.swingx.JXTextField();
        txtName = new javax.swing.JTextField();
        lblNama = new javax.swing.JLabel();
        lblId = new javax.swing.JLabel();
        lblBoxHeader = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        lblBox = new javax.swing.JLabel();
        lblBackground = new javax.swing.JLabel();

        setMaximumSize(new java.awt.Dimension(832, 520));
        setMinimumSize(new java.awt.Dimension(832, 520));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        lblCancel.setBackground(new java.awt.Color(153, 0, 0));
        lblCancel.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        lblCancel.setForeground(new java.awt.Color(255, 255, 255));
        lblCancel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblCancel.setText("Cancel");
        lblCancel.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        lblCancel.setOpaque(true);
        lblCancel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                lblCancelMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                lblCancelMouseExited(evt);
            }
        });
        add(lblCancel, new org.netbeans.lib.awtextra.AbsoluteConstraints(690, 360, 60, 20));

        lblNew.setBackground(new java.awt.Color(153, 0, 0));
        lblNew.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        lblNew.setForeground(new java.awt.Color(255, 255, 255));
        lblNew.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblNew.setText("Clear");
        lblNew.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        lblNew.setOpaque(true);
        lblNew.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblNewMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                lblNewMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                lblNewMouseExited(evt);
            }
        });
        lblNew.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                lblNewKeyPressed(evt);
            }
        });
        add(lblNew, new org.netbeans.lib.awtextra.AbsoluteConstraints(610, 360, 60, 20));

        lblUpdate.setBackground(new java.awt.Color(153, 0, 0));
        lblUpdate.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        lblUpdate.setForeground(new java.awt.Color(255, 255, 255));
        lblUpdate.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblUpdate.setText("Update");
        lblUpdate.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        lblUpdate.setOpaque(true);
        lblUpdate.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblUpdateMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                lblUpdateMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                lblUpdateMouseExited(evt);
            }
        });
        add(lblUpdate, new org.netbeans.lib.awtextra.AbsoluteConstraints(530, 360, 60, 20));

        txtCatId.setPrompt("cat001");
        txtCatId.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtCatIdActionPerformed(evt);
            }
        });
        txtCatId.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtCatIdKeyPressed(evt);
            }
        });
        add(txtCatId, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 70, 210, -1));

        txtName.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtNameKeyPressed(evt);
            }
        });
        add(txtName, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 110, 210, -1));

        lblNama.setText("Category Name                              :");
        add(lblNama, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 110, -1, -1));

        lblId.setText("Category ID                                     :");
        add(lblId, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 70, -1, -1));

        lblBoxHeader.setBackground(new java.awt.Color(0, 102, 153));
        lblBoxHeader.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        lblBoxHeader.setForeground(new java.awt.Color(255, 255, 255));
        lblBoxHeader.setText("    Category Details");
        lblBoxHeader.setOpaque(true);
        add(lblBoxHeader, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 20, 790, 30));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/edu/ijse/water/assets/Entypo_d83d(0)_32_1.png"))); // NOI18N
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(490, 70, -1, 20));

        lblBox.setBackground(new java.awt.Color(51, 0, 0));
        lblBox.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        add(lblBox, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 20, 790, 390));

        lblBackground.setBackground(new java.awt.Color(255, 255, 255));
        lblBackground.setOpaque(true);
        add(lblBackground, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 830, 520));
    }// </editor-fold>//GEN-END:initComponents

    private void lblCancelMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblCancelMouseEntered
        lblCancel.setBackground(new Color(255,51,51));
    }//GEN-LAST:event_lblCancelMouseEntered

    private void lblCancelMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblCancelMouseExited
        lblCancel.setBackground(new Color(153,0,0));
    }//GEN-LAST:event_lblCancelMouseExited

    private void lblNewMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblNewMouseEntered
        lblNew.setBackground(new Color(255,51,51));
    }//GEN-LAST:event_lblNewMouseEntered

    private void lblNewMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblNewMouseExited
        lblNew.setBackground(new Color(153,0,0));
    }//GEN-LAST:event_lblNewMouseExited

    private void lblUpdateMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblUpdateMouseEntered
        lblUpdate.setBackground(new Color(255,51,51));
    }//GEN-LAST:event_lblUpdateMouseEntered

    private void lblUpdateMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblUpdateMouseExited
        lblUpdate.setBackground(new Color(153,0,0));
    }//GEN-LAST:event_lblUpdateMouseExited

    private void lblUpdateMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblUpdateMouseClicked
       CategoryDTO categoryDTO= new CategoryDTO();
        categoryDTO.setCatId(txtCatId.getText());
        categoryDTO.setCatName(txtName.getText());
        
        boolean result;
        
        try {
            result=ManageCategoryController.updateCategory(categoryDTO);
            if(result){
                JOptionPane.showMessageDialog(this, "Category has been Update successfully");
            }else{
                JOptionPane.showMessageDialog(this, "Failed to Update the Category");
            }
            ManageCategoryController.releaseCategory(reservedCatId);
            reservedCatId = "";
            txtCatId.requestFocusInWindow();
            update = false;
            txtCatId.setText("");
            txtName.setText("");
            lblUpdate.setVisible(false);
            valid=0;
            txtCatId.setBorder(defaultBorder);
            txtName.setBorder(defaultBorder);
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, "Failed to Update the Category", "Error", JOptionPane.ERROR_MESSAGE);
            Logger.getLogger(Category_Update.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_lblUpdateMouseClicked

    private void lblNewMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblNewMouseClicked
        txtCatId.setText("");
        txtName.setText("");
        lblUpdate.setVisible(false);
        valid=0;
        txtCatId.setBorder(defaultBorder);
        txtName.setBorder(defaultBorder);
    }//GEN-LAST:event_lblNewMouseClicked

    private void lblNewKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_lblNewKeyPressed
        
    }//GEN-LAST:event_lblNewKeyPressed

    private void txtNameKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNameKeyPressed
        if(txtName.getText().matches("[A-Za-z ]+")){
            txtName.setBorder(defaultBorder);
            valid=0;
            check();
        }else{
            txtName.setBorder(BorderFactory.createLineBorder(Color.red));
            valid=1;
            check();
        }
    }//GEN-LAST:event_txtNameKeyPressed

    private void txtCatIdKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCatIdKeyPressed
        if(txtCatId.getText().matches("cat[0-9]+")){
            txtCatId.setBorder(defaultBorder);

        }else{
            txtCatId.setBorder(BorderFactory.createLineBorder(Color.red));
        }
    }//GEN-LAST:event_txtCatIdKeyPressed

    private void txtCatIdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtCatIdActionPerformed
        lblUpdate.setVisible(true); 
        CategoryDTO categoryDTO = new CategoryDTO();
        
         try {
             categoryDTO=ManageCategoryController.searchCategory(txtCatId.getText());
             
             if(categoryDTO!= null){
                 //txtName.setText(categoryDTO.getCatName());
             }else{
                 
             }
             
         } catch (Exception ex) {
             JOptionPane.showMessageDialog(this, "No data found...", "Error", JOptionPane.ERROR_MESSAGE); 
             Logger.getLogger(Category_Remove.class.getName()).log(Level.SEVERE, null, ex);
         }
        
        try {
                    if (reservedCatId == "") {
                        ManageCategoryController.releaseCategory(reservedCatId);
                    }
                    reservedCatId = txtCatId.getText();
                    boolean reserveCategory = ManageCategoryController.reserveCategory(reservedCatId);

                    if (reserveCategory) {
                        update = true;
                        txtName.setText(categoryDTO.getCatName());
                    } else {
                        update = false;
                        JOptionPane.showMessageDialog(Category_Update.this, "Category has been already reserved");
                    }

                } catch (Exception ex) {
                    Logger.getLogger(Category_Update.class.getName()).log(Level.SEVERE, null, ex);
                }
    }//GEN-LAST:event_txtCatIdActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel lblBackground;
    private javax.swing.JLabel lblBox;
    private javax.swing.JLabel lblBoxHeader;
    private javax.swing.JLabel lblCancel;
    private javax.swing.JLabel lblId;
    private javax.swing.JLabel lblNama;
    private javax.swing.JLabel lblNew;
    private javax.swing.JLabel lblUpdate;
    private org.jdesktop.swingx.JXTextField txtCatId;
    private javax.swing.JTextField txtName;
    // End of variables declaration//GEN-END:variables

    @Override
    public void updateObservers() throws Exception {
       
    }

    private void check() {
        if(valid>0){
            lblUpdate.setVisible(false);
        }else{
           lblUpdate.setVisible(true);
        }
    }
}
