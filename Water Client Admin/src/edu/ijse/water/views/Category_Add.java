/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package edu.ijse.water.views;

import edu.ijse.water.controller.ManageCategoryController;
import edu.ijse.water.controller.ManageIDController;
import edu.ijse.water.dto.CategoryDTO;
import edu.ijse.water.dto.IDDTO;
import edu.ijse.water.observer.Observer;
import java.awt.Color;
import java.rmi.server.UnicastRemoteObject;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.BorderFactory;
import javax.swing.JOptionPane;
import javax.swing.border.Border;

/**
 *
 * @author SL_WOLF
 */
public class Category_Add extends javax.swing.JPanel implements Observer{

    /**
     * Creates new form AddCategory
     */
    private String reservedCatId = "";
    Border defaultBorder;
    int idBorder;
    int nameBorder;
    public Category_Add() {
        initComponents();
        defaultBorder = txtName.getBorder();
        lblAdd.setVisible(false);
        idBorder =0;
        nameBorder=0;
        loadId();
        
        try {
            UnicastRemoteObject.exportObject(this, 0);
            ManageCategoryController.getSubject().registerObserver(this);
        } catch (Exception ex) {
            Logger.getLogger(Category_Add.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblCancel = new javax.swing.JLabel();
        lblclear = new javax.swing.JLabel();
        lblAdd = new javax.swing.JLabel();
        txtName = new javax.swing.JTextField();
        lblName = new javax.swing.JLabel();
        txtCatId = new org.jdesktop.swingx.JXTextField();
        lblId = new javax.swing.JLabel();
        lblBoxHeader = new javax.swing.JLabel();
        lblBox = new javax.swing.JLabel();
        lblBackground = new javax.swing.JLabel();

        setMaximumSize(new java.awt.Dimension(832, 520));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        lblCancel.setBackground(new java.awt.Color(153, 0, 0));
        lblCancel.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        lblCancel.setForeground(new java.awt.Color(255, 255, 255));
        lblCancel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblCancel.setText("Cancel");
        lblCancel.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        lblCancel.setOpaque(true);
        lblCancel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                lblCancelMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                lblCancelMouseExited(evt);
            }
        });
        add(lblCancel, new org.netbeans.lib.awtextra.AbsoluteConstraints(690, 360, 60, 20));

        lblclear.setBackground(new java.awt.Color(153, 0, 0));
        lblclear.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        lblclear.setForeground(new java.awt.Color(255, 255, 255));
        lblclear.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblclear.setText("Clear");
        lblclear.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        lblclear.setOpaque(true);
        lblclear.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblclearMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                lblclearMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                lblclearMouseExited(evt);
            }
        });
        add(lblclear, new org.netbeans.lib.awtextra.AbsoluteConstraints(610, 360, 60, 20));

        lblAdd.setBackground(new java.awt.Color(153, 0, 0));
        lblAdd.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        lblAdd.setForeground(new java.awt.Color(255, 255, 255));
        lblAdd.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblAdd.setText("Add");
        lblAdd.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        lblAdd.setOpaque(true);
        lblAdd.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblAddMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                lblAddMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                lblAddMouseExited(evt);
            }
        });
        add(lblAdd, new org.netbeans.lib.awtextra.AbsoluteConstraints(530, 360, 60, 20));

        txtName.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtNameKeyPressed(evt);
            }
        });
        add(txtName, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 110, 210, -1));

        lblName.setText("Category Name                              :");
        add(lblName, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 110, -1, -1));

        txtCatId.setPrompt("cat001");
        txtCatId.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtCatIdKeyPressed(evt);
            }
        });
        add(txtCatId, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 70, 210, -1));

        lblId.setText("Category ID                                     :");
        add(lblId, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 70, -1, -1));

        lblBoxHeader.setBackground(new java.awt.Color(0, 102, 153));
        lblBoxHeader.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        lblBoxHeader.setForeground(new java.awt.Color(255, 255, 255));
        lblBoxHeader.setText("    Category Details");
        lblBoxHeader.setOpaque(true);
        add(lblBoxHeader, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 20, 790, 30));

        lblBox.setBackground(new java.awt.Color(51, 0, 0));
        lblBox.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        add(lblBox, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 20, 790, 390));

        lblBackground.setBackground(new java.awt.Color(255, 255, 255));
        lblBackground.setOpaque(true);
        add(lblBackground, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 830, 520));
    }// </editor-fold>//GEN-END:initComponents

    private void lblAddMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblAddMouseEntered
        lblAdd.setBackground(new Color(255,51,51));
    }//GEN-LAST:event_lblAddMouseEntered

    private void lblAddMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblAddMouseExited
        lblAdd.setBackground(new Color(153,0,0));
    }//GEN-LAST:event_lblAddMouseExited

    private void lblCancelMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblCancelMouseExited
        lblCancel.setBackground(new Color(153,0,0));
    }//GEN-LAST:event_lblCancelMouseExited

    private void lblCancelMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblCancelMouseEntered
        lblCancel.setBackground(new Color(255,51,51));
    }//GEN-LAST:event_lblCancelMouseEntered

    private void lblclearMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblclearMouseExited
        lblclear.setBackground(new Color(153,0,0));
    }//GEN-LAST:event_lblclearMouseExited

    private void lblclearMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblclearMouseEntered
        lblclear.setBackground(new Color(255,51,51));
    }//GEN-LAST:event_lblclearMouseEntered

    private void lblAddMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblAddMouseClicked
        CategoryDTO categoryDTO= new CategoryDTO();
        categoryDTO.setCatId(txtCatId.getText());
        categoryDTO.setCatName(txtName.getText());
        
        boolean result=false;
        
        try {
            result=ManageCategoryController.addCategory(categoryDTO);
            if(result){
                JOptionPane.showMessageDialog(this, "Category has been saved successfully");
                txtCatId.setText("");
                txtName.setText("");
            }else{
                JOptionPane.showMessageDialog(this, "Failed to save the Category", "Error", JOptionPane.ERROR_MESSAGE);
            }
        }catch (Exception ex) {
            JOptionPane.showMessageDialog(this, "Failed to save the Category", "Error", JOptionPane.ERROR_MESSAGE);
            Logger.getLogger(Category_Add.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_lblAddMouseClicked

    private void lblclearMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblclearMouseClicked
        txtCatId.setText("");
        txtName.setText("");
        lblAdd.setVisible(false);
        idBorder =0;
        nameBorder=0;
        txtCatId.setBorder(defaultBorder);
        txtName.setBorder(defaultBorder);
    }//GEN-LAST:event_lblclearMouseClicked

    private void txtNameKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNameKeyPressed
        if(txtName.getText().matches("[A-Za-z ]+")){
            txtName.setBorder(defaultBorder);
            nameBorder=1;
            check();
        }else{
            txtName.setBorder(BorderFactory.createLineBorder(Color.red));
            nameBorder=0;
            check();
        }
    }//GEN-LAST:event_txtNameKeyPressed

    private void txtCatIdKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCatIdKeyPressed
        if(txtCatId.getText().matches("cat[0-9]+")){
            txtCatId.setBorder(defaultBorder);
            idBorder =1;
            check();
        
        }else{
            txtCatId.setBorder(BorderFactory.createLineBorder(Color.red));
            idBorder =0;
            check();
        }
    }//GEN-LAST:event_txtCatIdKeyPressed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel lblAdd;
    private javax.swing.JLabel lblBackground;
    private javax.swing.JLabel lblBox;
    private javax.swing.JLabel lblBoxHeader;
    private javax.swing.JLabel lblCancel;
    private javax.swing.JLabel lblId;
    private javax.swing.JLabel lblName;
    private javax.swing.JLabel lblclear;
    private org.jdesktop.swingx.JXTextField txtCatId;
    private javax.swing.JTextField txtName;
    // End of variables declaration//GEN-END:variables

    @Override
    public void updateObservers() throws Exception {
        
    }

    private void check() {
        if(idBorder>0){
            if(nameBorder>0){
                lblAdd.setVisible(true);
            }else{
                lblAdd.setVisible(false);
            }
        }else{
            lblAdd.setVisible(false);
        }
    }

    private void loadId() {
//        IDDTO idDTO=new IDDTO("Category", "catId");
//        try {
//            String id=ManageIDController.getNewID(idDTO, "cat");
//            txtCatId.setText(id);
//        } catch (Exception ex) {
//            Logger.getLogger(Category_Add.class.getName()).log(Level.SEVERE, null, ex);
//        }
    }
}
