/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package edu.ijse.water.client.views;

import edu.ijse.water.client.controller.ManageCustomerController;
import edu.ijse.water.client.controller.ManageFoodController;
import edu.ijse.water.client.controller.ManageGiftController;
import edu.ijse.water.client.controller.ManagePendingController;
import edu.ijse.water.client.controller.ManagePlaceOrderController;
import edu.ijse.water.client.controller.ManageServiceController;
import edu.ijse.water.client.jasper.MyJasperView;
import edu.ijse.water.dto.CategoryDTO;
import edu.ijse.water.dto.CustomerDTO;
import edu.ijse.water.dto.FoodDTO;
import edu.ijse.water.dto.GiftDTO;
import edu.ijse.water.dto.OrderDetailsDTO;
import edu.ijse.water.dto.PendingDTO;
import edu.ijse.water.dto.PlaceOrderDTO;
import edu.ijse.water.dto.ServiceDTO;
import java.awt.Color;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import net.sf.jasperreports.engine.JRException;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.JasperReport;
import net.sf.jasperreports.engine.data.JRTableModelDataSource;
import net.sf.jasperreports.engine.util.JRLoader;

/**
 *
 * @author SL_WOLF
 */
public class CheckOut extends javax.swing.JPanel {

    /**
     * Creates new form Category_Remove
     */
    DefaultTableModel dtm;
    List<FoodDTO> foodDTOs;
    List<GiftDTO> giftDTOs;
    List<ServiceDTO> serviceDTOs;
    List<OrderDetailsDTO> orderDetailsDTOs;
    private int custCount;
    private  String tabelWbid;
    private  String tabelService;
    private  String tabelItem;
    private  double tabelPrice;
    private  String tabelTime;
    private double totalAmont;
    private String time;
    
    public CheckOut() {
        initComponents();
        dtm = (DefaultTableModel) tblOrders.getModel();
        dtm.setRowCount(0);
        loadAllFoods();
        loadAllGifts();
        loadAllServices();
        custCount=0;
        hideThings();
        orderDetailsDTOs= new ArrayList<OrderDetailsDTO>();
        setDate();
        totalAmont=0;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        txtAmount = new javax.swing.JTextField();
        lblAmount = new javax.swing.JLabel();
        txtPaymentDetails = new javax.swing.JTextField();
        txtPaymentType = new javax.swing.JTextField();
        lblPaymentType = new javax.swing.JLabel();
        lblPaymentDetails = new javax.swing.JLabel();
        lblCancelPayment = new javax.swing.JLabel();
        lblPay = new javax.swing.JLabel();
        lblCash = new javax.swing.JLabel();
        lblCheq = new javax.swing.JLabel();
        lblCard = new javax.swing.JLabel();
        lblSelect = new javax.swing.JLabel();
        lblPayUp = new javax.swing.JLabel();
        lblPayBack = new javax.swing.JLabel();
        lblAnother = new javax.swing.JLabel();
        lblCancel = new javax.swing.JLabel();
        lblDate = new javax.swing.JLabel();
        lblBoxHeader = new javax.swing.JLabel();
        lblWB = new javax.swing.JLabel();
        txtWBandID = new javax.swing.JTextField();
        lblAllCid = new javax.swing.JLabel();
        lblPlace = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        txtTime = new javax.swing.JTextField();
        txtDate = new javax.swing.JTextField();
        lblcount = new javax.swing.JLabel();
        txtCount = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblOrders = new javax.swing.JTable();
        lblOPrice2 = new javax.swing.JLabel();
        txtTotal = new javax.swing.JTextField();
        cmbCid = new javax.swing.JComboBox<>();
        lblBox = new javax.swing.JLabel();
        lblBackground = new javax.swing.JLabel();

        setMaximumSize(new java.awt.Dimension(832, 520));
        setMinimumSize(new java.awt.Dimension(832, 520));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        txtAmount.setEditable(false);
        add(txtAmount, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 160, 240, 25));

        lblAmount.setText("Amount                           :");
        add(lblAmount, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 160, 140, 20));
        add(txtPaymentDetails, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 130, 240, 25));

        txtPaymentType.setEditable(false);
        add(txtPaymentType, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 100, 240, 25));

        lblPaymentType.setText("Payment Type                 :");
        add(lblPaymentType, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 100, 140, 20));

        lblPaymentDetails.setText("Payment Details              :");
        add(lblPaymentDetails, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 130, 140, 20));

        lblCancelPayment.setBackground(new java.awt.Color(153, 0, 0));
        lblCancelPayment.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        lblCancelPayment.setForeground(new java.awt.Color(255, 255, 255));
        lblCancelPayment.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblCancelPayment.setText("Cancel");
        lblCancelPayment.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        lblCancelPayment.setOpaque(true);
        lblCancelPayment.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblCancelPaymentMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                lblCancelPaymentMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                lblCancelPaymentMouseExited(evt);
            }
        });
        add(lblCancelPayment, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 130, 130, 20));

        lblPay.setBackground(new java.awt.Color(153, 0, 0));
        lblPay.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        lblPay.setForeground(new java.awt.Color(255, 255, 255));
        lblPay.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblPay.setText("Pay");
        lblPay.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        lblPay.setOpaque(true);
        lblPay.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblPayMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                lblPayMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                lblPayMouseExited(evt);
            }
        });
        add(lblPay, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 100, 130, 20));

        lblCash.setBackground(new java.awt.Color(255, 102, 51));
        lblCash.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        lblCash.setForeground(new java.awt.Color(255, 255, 255));
        lblCash.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblCash.setText("+   Cash");
        lblCash.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        lblCash.setOpaque(true);
        lblCash.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblCashMouseClicked(evt);
            }
        });
        add(lblCash, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 60, 130, 20));

        lblCheq.setBackground(new java.awt.Color(255, 102, 51));
        lblCheq.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        lblCheq.setForeground(new java.awt.Color(255, 255, 255));
        lblCheq.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblCheq.setText("+    Cheq");
        lblCheq.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        lblCheq.setOpaque(true);
        lblCheq.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblCheqMouseClicked(evt);
            }
        });
        add(lblCheq, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 60, 140, 20));

        lblCard.setBackground(new java.awt.Color(255, 102, 51));
        lblCard.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        lblCard.setForeground(new java.awt.Color(255, 255, 255));
        lblCard.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblCard.setText("+    Card");
        lblCard.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        lblCard.setOpaque(true);
        lblCard.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblCardMouseClicked(evt);
            }
        });
        add(lblCard, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 60, 140, 20));

        lblSelect.setBackground(new java.awt.Color(255, 102, 51));
        lblSelect.setOpaque(true);
        add(lblSelect, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 60, 560, 20));

        lblPayUp.setBackground(new java.awt.Color(0, 102, 153));
        lblPayUp.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        lblPayUp.setForeground(new java.awt.Color(255, 255, 255));
        lblPayUp.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblPayUp.setText("   Payment Details");
        lblPayUp.setOpaque(true);
        add(lblPayUp, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 40, 560, 20));

        lblPayBack.setBackground(new java.awt.Color(255, 255, 255));
        lblPayBack.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        lblPayBack.setOpaque(true);
        add(lblPayBack, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 30, 580, 160));

        lblAnother.setBackground(new java.awt.Color(153, 0, 0));
        lblAnother.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        lblAnother.setForeground(new java.awt.Color(255, 255, 255));
        lblAnother.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblAnother.setText("Add Another Customers Details");
        lblAnother.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        lblAnother.setOpaque(true);
        lblAnother.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblAnotherMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                lblAnotherMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                lblAnotherMouseExited(evt);
            }
        });
        add(lblAnother, new org.netbeans.lib.awtextra.AbsoluteConstraints(620, 170, 190, 20));

        lblCancel.setBackground(new java.awt.Color(153, 0, 0));
        lblCancel.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        lblCancel.setForeground(new java.awt.Color(255, 255, 255));
        lblCancel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblCancel.setText("Cancel");
        lblCancel.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        lblCancel.setOpaque(true);
        lblCancel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblCancelMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                lblCancelMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                lblCancelMouseExited(evt);
            }
        });
        add(lblCancel, new org.netbeans.lib.awtextra.AbsoluteConstraints(750, 440, 60, 20));

        lblDate.setBackground(new java.awt.Color(255, 255, 255));
        lblDate.setText("Date                                       :");
        lblDate.setOpaque(true);
        add(lblDate, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 100, 150, 20));

        lblBoxHeader.setBackground(new java.awt.Color(0, 102, 153));
        lblBoxHeader.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        lblBoxHeader.setForeground(new java.awt.Color(255, 255, 255));
        lblBoxHeader.setText("    Fill The Details");
        lblBoxHeader.setOpaque(true);
        add(lblBoxHeader, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 840, 30));

        lblWB.setText("Wrist Band ID                         :");
        add(lblWB, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 70, -1, -1));

        txtWBandID.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtWBandIDActionPerformed(evt);
            }
        });
        add(txtWBandID, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 70, 210, -1));

        lblAllCid.setText("All Customers IDs          :");
        add(lblAllCid, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 70, 150, -1));

        lblPlace.setBackground(new java.awt.Color(153, 0, 0));
        lblPlace.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        lblPlace.setForeground(new java.awt.Color(255, 255, 255));
        lblPlace.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblPlace.setText("CheckOut");
        lblPlace.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        lblPlace.setOpaque(true);
        lblPlace.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblPlaceMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                lblPlaceMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                lblPlaceMouseExited(evt);
            }
        });
        add(lblPlace, new org.netbeans.lib.awtextra.AbsoluteConstraints(630, 440, 90, 20));

        jLabel1.setText("Entrance Time                       :");
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 130, 150, 20));

        txtTime.setEditable(false);
        add(txtTime, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 130, 210, -1));

        txtDate.setEditable(false);
        txtDate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtDateActionPerformed(evt);
            }
        });
        add(txtDate, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 100, 210, -1));

        lblcount.setText("Count Of customers              :");
        add(lblcount, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 100, 150, -1));

        txtCount.setEditable(false);
        add(txtCount, new org.netbeans.lib.awtextra.AbsoluteConstraints(600, 100, 210, -1));

        tblOrders.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Wrist Band ID", "Service", "Other", "Price", "Time"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Double.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblOrders);

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 200, 780, 230));

        lblOPrice2.setText("Total                                      :");
        add(lblOPrice2, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 440, 150, -1));

        txtTotal.setEditable(false);
        add(txtTotal, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 440, 210, -1));

        cmbCid.setMaximumRowCount(100);
        add(cmbCid, new org.netbeans.lib.awtextra.AbsoluteConstraints(600, 70, 210, -1));

        lblBox.setBackground(new java.awt.Color(51, 0, 0));
        lblBox.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        add(lblBox, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 840, 490));

        lblBackground.setBackground(new java.awt.Color(255, 255, 255));
        lblBackground.setOpaque(true);
        add(lblBackground, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 840, 490));
    }// </editor-fold>//GEN-END:initComponents

    private void lblAnotherMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblAnotherMouseEntered
        lblAnother.setBackground(new Color(255,51,51));
    }//GEN-LAST:event_lblAnotherMouseEntered

    private void lblAnotherMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblAnotherMouseExited
        lblAnother.setBackground(new Color(153,0,0));
    }//GEN-LAST:event_lblAnotherMouseExited

    private void lblCancelMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblCancelMouseEntered
        lblCancel.setBackground(new Color(255,51,51));
    }//GEN-LAST:event_lblCancelMouseEntered

    private void lblCancelMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblCancelMouseExited
        lblCancel.setBackground(new Color(153,0,0));
    }//GEN-LAST:event_lblCancelMouseExited

    private void lblPlaceMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblPlaceMouseEntered
        lblPlace.setBackground(new Color(255,51,51));
    }//GEN-LAST:event_lblPlaceMouseEntered

    private void lblPlaceMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblPlaceMouseExited
        lblPlace.setBackground(new Color(153,0,0));
    }//GEN-LAST:event_lblPlaceMouseExited

    private void txtWBandIDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtWBandIDActionPerformed
        
        boolean isFound=CustomerDetails(txtWBandID.getText(),txtDate.getText());
        
        if(isFound){
            try {
            List<PendingDTO> pendingDTOs = ManagePendingController.getAll(txtWBandID.getText());

            if (pendingDTOs == null) {
                return;
            }

            for (PendingDTO pendingDTO : pendingDTOs) {
                
                tabelWbid=pendingDTO.getWbid();
                tabelTime=pendingDTO.getTime();
                  
                    
                    
                    for (ServiceDTO serviceDTO : serviceDTOs) {
                        
                        ServiceDTO addServiceDTO = new ServiceDTO();
                        
                        String serID=pendingDTO.getServiceID();
                        
                        if(serID.matches(serviceDTO.getServiceId())){
                            addServiceDTO.setServiceId(serviceDTO.getServiceId());
                            addServiceDTO.setServiceName(serviceDTO.getServiceName());
                            tabelService=serviceDTO.getServiceName();
                            addServiceDTO.setPassword(serviceDTO.getPassword());
                            addServiceDTO.setPrice(serviceDTO.getPrice());
                            CategoryDTO categoryDTO=serviceDTO.getCategoryDTO();
                            addServiceDTO.setCategoryDTO(categoryDTO);
                            
                            if(pendingDTO.getServiceID().matches("service003")){
                                
                                for (FoodDTO foodDTO : foodDTOs) {
                                    
                                    if(pendingDTO.getItemID().matches(foodDTO.getFid())){
                                        
                                        tabelItem=(foodDTO.getDescription()+" * "+pendingDTO.getQty());
                                        double price=(foodDTO.getPrice() * pendingDTO.getQty());
                                        tabelPrice=price;
                                        
                                    }

                                }
                            }else if(pendingDTO.getServiceID().matches("service004")){
                                
                                for(GiftDTO giftDTO : giftDTOs){
                                    
                                    if(pendingDTO.getItemID().matches(giftDTO.getGid())){
                                        tabelItem=(giftDTO.getDescription()+" * "+pendingDTO.getQty());
                                        double price=(giftDTO.getPrice() * pendingDTO.getQty());
                                        tabelPrice=price;
                                    }
                                }
                                
                            }else{
                                tabelItem="";
                                tabelPrice=serviceDTO.getPrice();
                            }
                            
                            OrderDetailsDTO orderDetailsDTO = new OrderDetailsDTO();
                            orderDetailsDTO.setPrice(tabelPrice);
                            orderDetailsDTO.setServiceDTO(addServiceDTO);
                            
                            
                            orderDetailsDTOs.add(orderDetailsDTO);
                        } 
                    }
              
                Object[] rowData = {
                    tabelWbid,
                    tabelService,
                    tabelItem,
                    tabelPrice,
                    tabelTime
                };
                dtm.addRow(rowData);
                totalAmont=totalAmont+tabelPrice;
                txtTotal.setText(""+totalAmont);
            }

        } catch (Exception ex) {
            Logger.getLogger(CheckOut.class.getName()).log(Level.SEVERE, null, ex);
        }
        }
        
        
    }//GEN-LAST:event_txtWBandIDActionPerformed

    private void lblAnotherMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblAnotherMouseClicked
        cmbCid.setVisible(true);
        lblAllCid.setVisible(true);
        lblcount.setVisible(true);
        txtCount.setVisible(true);
        txtWBandID.setText("");
    }//GEN-LAST:event_lblAnotherMouseClicked

    private void lblPlaceMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblPlaceMouseClicked
  
        PayMent();
    }//GEN-LAST:event_lblPlaceMouseClicked

    private void txtDateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtDateActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtDateActionPerformed

    private void lblCancelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblCancelMouseClicked
        clearAll();
    }//GEN-LAST:event_lblCancelMouseClicked

    private void lblCashMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblCashMouseClicked
        lblCash.setForeground(Color.BLACK);
        lblCash.setBackground(Color.WHITE);
        lblCard.setForeground(Color.WHITE);
        lblCard.setBackground(new Color(255,102,51));
        lblCheq.setForeground(Color.WHITE);
        lblCheq.setBackground(new Color(255,102,51));
        
        txtPaymentType.setText("Cash");
        txtPaymentDetails.setText("Cash");
        
    }//GEN-LAST:event_lblCashMouseClicked

    private void lblCheqMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblCheqMouseClicked
        lblCheq.setForeground(Color.BLACK);
        lblCheq.setBackground(Color.WHITE);
        lblCard.setForeground(Color.WHITE);
        lblCard.setBackground(new Color(255,102,51));
        lblCash.setForeground(Color.WHITE);
        lblCash.setBackground(new Color(255,102,51));
        
        txtPaymentType.setText("Cheq");
        txtPaymentDetails.setText("");
    }//GEN-LAST:event_lblCheqMouseClicked

    private void lblCardMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblCardMouseClicked
        lblCard.setForeground(Color.BLACK);
        lblCard.setBackground(Color.WHITE);
        lblCheq.setForeground(Color.WHITE);
        lblCheq.setBackground(new Color(255,102,51));
        lblCash.setForeground(Color.WHITE);
        lblCash.setBackground(new Color(255,102,51));
        
        txtPaymentType.setText("Card");
        txtPaymentDetails.setText("");
    }//GEN-LAST:event_lblCardMouseClicked

    private void lblPayMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblPayMouseEntered
        lblPay.setBackground(new Color(255,51,51));
    }//GEN-LAST:event_lblPayMouseEntered

    private void lblPayMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblPayMouseExited
        lblPay.setBackground(new Color(153,0,0));
    }//GEN-LAST:event_lblPayMouseExited

    private void lblCancelPaymentMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblCancelPaymentMouseEntered
        lblCancelPayment.setBackground(new Color(255,51,51));
    }//GEN-LAST:event_lblCancelPaymentMouseEntered

    private void lblCancelPaymentMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblCancelPaymentMouseExited
        lblCancelPayment.setBackground(new Color(153,0,0));
    }//GEN-LAST:event_lblCancelPaymentMouseExited

    private void lblCancelPaymentMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblCancelPaymentMouseClicked
       lblPayUp.setVisible(false);
        lblPayBack.setVisible(false);
        lblSelect.setVisible(false);
        lblCash.setVisible(false);
        lblCard.setVisible(false);
        lblCheq.setVisible(false);
        lblPay.setVisible(false);
        lblPaymentDetails.setVisible(false);
        lblPaymentType.setVisible(false);
        lblCancelPayment.setVisible(false);
        lblAmount.setVisible(false);
        txtAmount.setVisible(false);
        txtPaymentDetails.setVisible(false);
        txtPaymentType.setVisible(false);
        txtAmount.setText("");
        txtPaymentDetails.setText("");
    }//GEN-LAST:event_lblCancelPaymentMouseClicked

    private void lblPayMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblPayMouseClicked
        PlaceOrderDTO placeOrderDTO = new PlaceOrderDTO();
        placeOrderDTO.setCid(Integer.parseInt(cmbCid.getSelectedItem().toString()));
        placeOrderDTO.setOrderDate(txtDate.getText());
        placeOrderDTO.setAmount(totalAmont);
        placeOrderDTO.setPaymentDetails(txtPaymentDetails.getText());
        placeOrderDTO.setPaymentType(txtPaymentType.getText());
        placeOrderDTO.setOrderDetailsDTOs(orderDetailsDTOs);
        
        try {
            boolean result=ManagePlaceOrderController.placeOrder(placeOrderDTO);
            
            if(result){
                JOptionPane.showMessageDialog(this, "Order Has been Placed Successfully");
                printReport();
                clearAll();
            }else{
                JOptionPane.showMessageDialog(this, "Order Has failed to Place");
            }
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, "Order Has failed to Place", "Error", JOptionPane.ERROR_MESSAGE);
            Logger.getLogger(CheckOut.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_lblPayMouseClicked


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> cmbCid;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblAllCid;
    private javax.swing.JLabel lblAmount;
    private javax.swing.JLabel lblAnother;
    private javax.swing.JLabel lblBackground;
    private javax.swing.JLabel lblBox;
    private javax.swing.JLabel lblBoxHeader;
    private javax.swing.JLabel lblCancel;
    private javax.swing.JLabel lblCancelPayment;
    private javax.swing.JLabel lblCard;
    private javax.swing.JLabel lblCash;
    private javax.swing.JLabel lblCheq;
    private javax.swing.JLabel lblDate;
    private javax.swing.JLabel lblOPrice2;
    private javax.swing.JLabel lblPay;
    private javax.swing.JLabel lblPayBack;
    private javax.swing.JLabel lblPayUp;
    private javax.swing.JLabel lblPaymentDetails;
    private javax.swing.JLabel lblPaymentType;
    private javax.swing.JLabel lblPlace;
    private javax.swing.JLabel lblSelect;
    private javax.swing.JLabel lblWB;
    private javax.swing.JLabel lblcount;
    private javax.swing.JTable tblOrders;
    private javax.swing.JTextField txtAmount;
    private javax.swing.JTextField txtCount;
    private javax.swing.JTextField txtDate;
    private javax.swing.JTextField txtPaymentDetails;
    private javax.swing.JTextField txtPaymentType;
    private javax.swing.JTextField txtTime;
    private javax.swing.JTextField txtTotal;
    private javax.swing.JTextField txtWBandID;
    // End of variables declaration//GEN-END:variables

    private void loadAllFoods() {
        try {
             foodDTOs = ManageFoodController.getAllFoods();
        } catch (Exception ex) {
            Logger.getLogger(CheckOut.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void loadAllGifts() {
        try {
             giftDTOs = ManageGiftController.getAllGifts();
        } catch (Exception ex) {
            Logger.getLogger(CheckOut.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void loadAllServices() {
        try {
            serviceDTOs = ManageServiceController.getAllServices();
        } catch (Exception ex) {
            Logger.getLogger(CheckOut.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private boolean CustomerDetails(String wbid,String date) {
        
            
        List<CustomerDTO> customerDTOs= new ArrayList<>();

        
        try {
            customerDTOs=ManageCustomerController.getCustomer(wbid, date);
            
            if (customerDTOs == null) {
                return false;
            }

            
            for (CustomerDTO customerDTO : customerDTOs) {
                txtTime.setText(customerDTO.getTime());
                cmbCid.addItem(""+customerDTO.getCid());
                custCount++;
                txtCount.setText(""+custCount);
                
                return true;
            }
        } catch (Exception ex) {
            Logger.getLogger(CheckOut.class.getName()).log(Level.SEVERE, null, ex);
        }
        return false;

        
       
    }

    private void hideThings() {
        cmbCid.setVisible(false);
        lblAllCid.setVisible(false);
        lblcount.setVisible(false);
        txtCount.setVisible(false);
        
        lblPayUp.setVisible(false);
        lblPayBack.setVisible(false);
        lblSelect.setVisible(false);
        lblCash.setVisible(false);
        lblCard.setVisible(false);
        lblCheq.setVisible(false);
        lblPay.setVisible(false);
        lblPaymentDetails.setVisible(false);
        lblPaymentType.setVisible(false);
        lblCancelPayment.setVisible(false);
        lblAmount.setVisible(false);
        txtAmount.setVisible(false);
        txtPaymentDetails.setVisible(false);
        txtPaymentType.setVisible(false);
    }

    private void PayMent() {
        lblPayUp.setVisible(true);
        lblPayBack.setVisible(true);
        lblSelect.setVisible(true);
        lblCash.setVisible(true);
        lblCard.setVisible(true);
        lblCheq.setVisible(true);
        lblPay.setVisible(true);
        lblPaymentDetails.setVisible(true);
        lblPaymentType.setVisible(true);
        lblCancelPayment.setVisible(true);
        lblAmount.setVisible(true);
        txtAmount.setVisible(true);
        txtPaymentDetails.setVisible(true);
        txtPaymentType.setVisible(true);
 ////////////////////////////////////////////////////////////       
        lblCash.setForeground(Color.BLACK);
        lblCash.setBackground(Color.WHITE);
        lblCard.setForeground(Color.WHITE);
        lblCard.setBackground(new Color(255,102,51));
        lblCheq.setForeground(Color.WHITE);
        lblCheq.setBackground(new Color(255,102,51));
        
        txtPaymentType.setText("Cash");
        txtPaymentDetails.setText("Cash");
        txtAmount.setText(""+totalAmont);
        
        
    }

    private void clearAll() {
        dtm.setRowCount(0);
        cmbCid.removeAllItems();
        loadAllFoods();
        loadAllGifts();
        loadAllServices();
        custCount=0;
        hideThings();
        orderDetailsDTOs= new ArrayList<OrderDetailsDTO>();
        txtTotal.setText("");
        txtWBandID.setText("");
        setDate();
        hideThings();
        txtTotal.setText("");
        totalAmont=0;
    }

    

    private void setDate() {
        java.util.Date d1=new java.util.Date();
		SimpleDateFormat df=new SimpleDateFormat("YYYY-MM-dd");
		String formatDate=df.format(d1);
		txtDate.setText(formatDate);
    }

    private void printReport() {
        
        setPrintTime();
        
        try {
            JasperReport compiledReport=(JasperReport) JRLoader.loadObject(CheckOut.class.getResource("/edu/ijse/water/client/jasper/Invoice.jasper"));
            
            HashMap<String,Object> parameters = new HashMap<>();
            parameters.put("PaymentType", txtPaymentType.getText());
            parameters.put("Total", txtTotal.getText());
            parameters.put("Paid", txtTotal.getText());
            parameters.put("PrintTime ", time);
            JasperPrint filledReport=JasperFillManager.fillReport(compiledReport, parameters, new JRTableModelDataSource(tblOrders.getModel()));
            
            MyJasperView frmJasperView=new MyJasperView(filledReport);
            frmJasperView.setVisible(true);
            
            
        } catch (JRException ex) {
            Logger.getLogger(CheckOut.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void setPrintTime() {
        java.util.Date d1=new java.util.Date();
		SimpleDateFormat df=new SimpleDateFormat("HH:mm");
		String formatDate=df.format(d1);
		time=(formatDate);
    }
}
