/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package edu.ijse.water.client.views;

import edu.ijse.water.client.controller.ManageFoodController;
import edu.ijse.water.client.controller.ManageGiftController;
import edu.ijse.water.client.controller.ManagePendingController;
import edu.ijse.water.dto.FoodDTO;
import edu.ijse.water.dto.GiftDTO;
import edu.ijse.water.dto.PendingDTO;
import java.awt.Color;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author SL_WOLF
 */
public class Place_Order_Shop extends javax.swing.JPanel {

    /**
     * Creates new form Category_Remove
     */
    DefaultTableModel dtm ;
    private String serviceId;
    public Place_Order_Shop() {
        initComponents();
        loadItems();
    }

    Place_Order_Shop(String serviceId) {
        initComponents();
        this.serviceId=serviceId;
        dtm = (DefaultTableModel) tblItem.getModel();
        loadItems();
        txtServiceID.setText(serviceId);
        setTime();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblClear = new javax.swing.JLabel();
        lblAddTo = new javax.swing.JLabel();
        lblBoxHeader = new javax.swing.JLabel();
        lblWB = new javax.swing.JLabel();
        txtWBandID = new javax.swing.JTextField();
        lblSI = new javax.swing.JLabel();
        txtServiceID = new javax.swing.JTextField();
        lblOPrice = new javax.swing.JLabel();
        txtPrice = new javax.swing.JTextField();
        lblPlace = new javax.swing.JLabel();
        lblDesc = new javax.swing.JLabel();
        lblItemID1 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        txtDesc = new javax.swing.JTextField();
        txtTime = new javax.swing.JTextField();
        lblOPrice1 = new javax.swing.JLabel();
        txtQty = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblItem = new javax.swing.JTable();
        lblOPrice2 = new javax.swing.JLabel();
        txtTotal = new javax.swing.JTextField();
        cmbItemID = new javax.swing.JComboBox<>();
        lblRemove = new javax.swing.JLabel();
        lblBox = new javax.swing.JLabel();
        lblBackground = new javax.swing.JLabel();

        setMaximumSize(new java.awt.Dimension(832, 520));
        setMinimumSize(new java.awt.Dimension(832, 520));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        lblClear.setBackground(new java.awt.Color(153, 0, 0));
        lblClear.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        lblClear.setForeground(new java.awt.Color(255, 255, 255));
        lblClear.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblClear.setText("Clear");
        lblClear.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        lblClear.setOpaque(true);
        lblClear.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblClearMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                lblClearMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                lblClearMouseExited(evt);
            }
        });
        add(lblClear, new org.netbeans.lib.awtextra.AbsoluteConstraints(710, 440, 80, 20));

        lblAddTo.setBackground(new java.awt.Color(153, 0, 0));
        lblAddTo.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        lblAddTo.setForeground(new java.awt.Color(255, 255, 255));
        lblAddTo.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblAddTo.setText("Add To Cart");
        lblAddTo.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        lblAddTo.setOpaque(true);
        lblAddTo.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblAddToMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                lblAddToMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                lblAddToMouseExited(evt);
            }
        });
        add(lblAddTo, new org.netbeans.lib.awtextra.AbsoluteConstraints(670, 230, 120, 20));

        lblBoxHeader.setBackground(new java.awt.Color(0, 102, 153));
        lblBoxHeader.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        lblBoxHeader.setForeground(new java.awt.Color(255, 255, 255));
        lblBoxHeader.setText("    Fill The Details");
        lblBoxHeader.setOpaque(true);
        add(lblBoxHeader, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 20, 800, 30));

        lblWB.setText("Wrist Band ID                         :");
        add(lblWB, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 70, -1, -1));
        add(txtWBandID, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 70, 210, -1));

        lblSI.setText("Service ID                              :");
        add(lblSI, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 100, -1, -1));

        txtServiceID.setEditable(false);
        add(txtServiceID, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 100, 210, -1));

        lblOPrice.setText("Price                                      :");
        add(lblOPrice, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 190, 150, -1));

        txtPrice.setEditable(false);
        add(txtPrice, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 190, 210, -1));

        lblPlace.setBackground(new java.awt.Color(153, 0, 0));
        lblPlace.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        lblPlace.setForeground(new java.awt.Color(255, 255, 255));
        lblPlace.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblPlace.setText("Place");
        lblPlace.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        lblPlace.setOpaque(true);
        lblPlace.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblPlaceMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                lblPlaceMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                lblPlaceMouseExited(evt);
            }
        });
        add(lblPlace, new org.netbeans.lib.awtextra.AbsoluteConstraints(570, 440, 130, 20));

        lblDesc.setText("Description                            :");
        add(lblDesc, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 160, -1, -1));

        lblItemID1.setText("ItemID                                   :");
        add(lblItemID1, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 130, -1, -1));

        jLabel1.setText("Time                  :");
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 70, 90, 20));

        txtDesc.setEditable(false);
        add(txtDesc, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 160, 210, -1));

        txtTime.setEditable(false);
        add(txtTime, new org.netbeans.lib.awtextra.AbsoluteConstraints(560, 70, 200, -1));

        lblOPrice1.setText("QTY                                      :");
        add(lblOPrice1, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 220, 150, -1));
        add(txtQty, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 220, 210, -1));

        tblItem.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Item ID", "Description", "unit Price", "Qty", "Price"
            }
        ));
        jScrollPane1.setViewportView(tblItem);

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 260, 730, 170));

        lblOPrice2.setText("Total                                      :");
        add(lblOPrice2, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 440, 150, -1));

        txtTotal.setEditable(false);
        add(txtTotal, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 440, 210, -1));

        cmbItemID.setMaximumRowCount(100);
        cmbItemID.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        cmbItemID.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cmbItemIDItemStateChanged(evt);
            }
        });
        add(cmbItemID, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 130, 210, -1));

        lblRemove.setBackground(new java.awt.Color(153, 0, 0));
        lblRemove.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        lblRemove.setForeground(new java.awt.Color(255, 255, 255));
        lblRemove.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblRemove.setText("Remove");
        lblRemove.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        lblRemove.setOpaque(true);
        lblRemove.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblRemoveMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                lblRemoveMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                lblRemoveMouseExited(evt);
            }
        });
        add(lblRemove, new org.netbeans.lib.awtextra.AbsoluteConstraints(570, 230, 80, 20));

        lblBox.setBackground(new java.awt.Color(51, 0, 0));
        lblBox.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        add(lblBox, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 20, 800, 450));

        lblBackground.setBackground(new java.awt.Color(255, 255, 255));
        lblBackground.setOpaque(true);
        add(lblBackground, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 840, 490));
    }// </editor-fold>//GEN-END:initComponents

    private void lblClearMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblClearMouseEntered
        lblClear.setBackground(new Color(255,51,51));
    }//GEN-LAST:event_lblClearMouseEntered

    private void lblClearMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblClearMouseExited
        lblClear.setBackground(new Color(153,0,0));
    }//GEN-LAST:event_lblClearMouseExited

    private void lblAddToMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblAddToMouseEntered
        lblAddTo.setBackground(new Color(255,51,51));
    }//GEN-LAST:event_lblAddToMouseEntered

    private void lblAddToMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblAddToMouseExited
        lblAddTo.setBackground(new Color(153,0,0));
    }//GEN-LAST:event_lblAddToMouseExited

    private void lblPlaceMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblPlaceMouseEntered
        lblPlace.setBackground(new Color(255,51,51));
    }//GEN-LAST:event_lblPlaceMouseEntered

    private void lblPlaceMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblPlaceMouseExited
        lblPlace.setBackground(new Color(153,0,0));
    }//GEN-LAST:event_lblPlaceMouseExited

    private void cmbItemIDItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cmbItemIDItemStateChanged
       if(serviceId.matches("service004")){
           GiftDTO giftDTO = new GiftDTO();
        
         try {
             giftDTO=ManageGiftController.searchGift(cmbItemID.getSelectedItem().toString());
             
             if(giftDTO!= null){
                 txtDesc.setText(giftDTO.getDescription());
                 txtPrice.setText(""+giftDTO.getPrice());
             }
             
         } catch (Exception ex) {
             Logger.getLogger(Place_Order_Shop.class.getName()).log(Level.SEVERE, null, ex);
         }
       }else{
           FoodDTO foodDTO = new FoodDTO();
        
         try {
             foodDTO=ManageFoodController.searchFood(cmbItemID.getSelectedItem().toString());
             
             if(foodDTO!= null){
                 txtDesc.setText(foodDTO.getDescription());
                 txtPrice.setText(""+foodDTO.getPrice());
             }
             
         } catch (Exception ex) {
             Logger.getLogger(Place_Order_Shop.class.getName()).log(Level.SEVERE, null, ex);
         }
       }
    }//GEN-LAST:event_cmbItemIDItemStateChanged
        double totalAmount;
    private void lblAddToMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblAddToMouseClicked
        
        DefaultTableModel dtm=(DefaultTableModel)tblItem.getModel();
        
        String itemCode=(String)cmbItemID.getSelectedItem();
        String Description=txtDesc.getText();
        double unitPrice=Double.parseDouble(txtPrice.getText());
        int Qty=Integer.parseInt(txtQty.getText());
                   
                        for(int i=0;i<dtm.getRowCount();i++){
                            String code=(String)dtm.getValueAt(i,0);
                            if(itemCode.equals(code)){
                                int qty=(int)dtm.getValueAt(i,3);	
                                Qty+=qty;
                                dtm.removeRow(i);
                                totalAmount-=qty*(unitPrice);
                            }
                        }
                        double amount=unitPrice*Qty;

                         totalAmount+=amount;
                        txtTotal.setText(""+totalAmount);


                        Object[] rowData={itemCode,Description,unitPrice,Qty,amount};	
                        dtm.addRow(rowData);

                         txtQty.setText("");
                         
    }//GEN-LAST:event_lblAddToMouseClicked

    private void lblRemoveMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblRemoveMouseEntered
        lblRemove.setBackground(new Color(255,51,51));
    }//GEN-LAST:event_lblRemoveMouseEntered

    private void lblRemoveMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblRemoveMouseExited
        lblRemove.setBackground(new Color(153,0,0));
    }//GEN-LAST:event_lblRemoveMouseExited

    private void lblRemoveMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblRemoveMouseClicked
        DefaultTableModel dtm=(DefaultTableModel)tblItem.getModel();
        int index=tblItem.getSelectedRow();
        double amount=(double)dtm.getValueAt(index,4);
	dtm.removeRow(index);
        totalAmount-=amount;
	txtTotal.setText(""+totalAmount); 
    }//GEN-LAST:event_lblRemoveMouseClicked

    private void lblPlaceMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblPlaceMouseClicked
       
       
       ArrayList<PendingDTO> allDTOs= new ArrayList<>();
        
            for (int i = 0; i < dtm.getRowCount(); i++) {
                PendingDTO pendingDTO=new PendingDTO();
                
                pendingDTO.setPid(0);
                pendingDTO.setServiceID(txtServiceID.getText());
                pendingDTO.setWbid(txtWBandID.getText());
                pendingDTO.setTime(txtTime.getText());
                pendingDTO.setItemID(dtm.getValueAt(i, 0).toString());
                pendingDTO.setQty(Integer.parseInt(dtm.getValueAt(i, 3).toString()));
                
                allDTOs.add(pendingDTO);
            }
            
            try {
                boolean result=ManagePendingController.addAll(allDTOs);
            if(result){
                JOptionPane.showMessageDialog(this, "Order has been Saved successfully");
                clear();
            }else{
                JOptionPane.showMessageDialog(this, "Failed to save the order");
                setTime();
            }
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, "Failed to save the order", "Error", JOptionPane.ERROR_MESSAGE);
            Logger.getLogger(Place_Order_Shop.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_lblPlaceMouseClicked

    private void lblClearMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblClearMouseClicked
        clear();
    }//GEN-LAST:event_lblClearMouseClicked


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> cmbItemID;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblAddTo;
    private javax.swing.JLabel lblBackground;
    private javax.swing.JLabel lblBox;
    private javax.swing.JLabel lblBoxHeader;
    private javax.swing.JLabel lblClear;
    private javax.swing.JLabel lblDesc;
    private javax.swing.JLabel lblItemID1;
    private javax.swing.JLabel lblOPrice;
    private javax.swing.JLabel lblOPrice1;
    private javax.swing.JLabel lblOPrice2;
    private javax.swing.JLabel lblPlace;
    private javax.swing.JLabel lblRemove;
    private javax.swing.JLabel lblSI;
    private javax.swing.JLabel lblWB;
    private javax.swing.JTable tblItem;
    private javax.swing.JTextField txtDesc;
    private javax.swing.JTextField txtPrice;
    private javax.swing.JTextField txtQty;
    private javax.swing.JTextField txtServiceID;
    private javax.swing.JTextField txtTime;
    private javax.swing.JTextField txtTotal;
    private javax.swing.JTextField txtWBandID;
    // End of variables declaration//GEN-END:variables

    private void loadItems() {
        if(serviceId.matches("service004")){
              try {
            List<GiftDTO> giftDTOs = ManageGiftController.getAllGifts();

            if (giftDTOs == null) {
                return;
            }

            for (GiftDTO giftDTO : giftDTOs) {
               cmbItemID.addItem(giftDTO.getGid());
            }

        } catch (Exception ex) {
            Logger.getLogger(Place_Order_Shop.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        }else{
            try {
            List<FoodDTO> foodDTOs = ManageFoodController.getAllFoods();

            if (foodDTOs == null) {
                return;
            }

            for (FoodDTO foodDTO : foodDTOs) {
               cmbItemID.addItem(foodDTO.getFid());
            }

            } catch (Exception ex) {
                Logger.getLogger(Place_Order_Shop.class.getName()).log(Level.SEVERE, null, ex);
            }
             
        }
    }

    private void setTime() {
        java.util.Date d1=new java.util.Date();
		SimpleDateFormat df=new SimpleDateFormat("HH:mm");
		String formatDate=df.format(d1);
		txtTime.setText(formatDate);
    }

    private void clear() {
        setTime();
        txtWBandID.setText("");
        txtQty.setText("");
        txtTotal.setText("");
        totalAmount=0;
        dtm.setRowCount(0);
    }
}
